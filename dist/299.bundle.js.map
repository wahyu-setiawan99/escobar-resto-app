{"version":3,"file":"299.bundle.js","mappings":";kYACA,8lGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qfAAAA,EAAA,EAAAA,EAAA,SAAAA,IAAA,SAAAA,GAAA,g5DACgE,IAE1DC,EAAY,aAHlB,qRAGkB,UAHlB,UAGkB,GAHlB,EAGkB,EAHlB,mJAGkB,sDAqDf,OAxDH,EAGkB,EAHlB,EAGkB,gCAChB,WACEC,KAAKC,QACP,GAAC,iBAED,WACE,IACMC,EAAO,CACXC,GAFUC,EAAAA,EAAAA,gCAEFD,GACRE,KAAML,KAAKM,cAAc,kBAAkBC,MAC3CC,OAAQR,KAAKM,cAAc,qBAAqBC,OAGlD,MAAO,CACLE,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUX,GAEzB,GAAC,oBAED,WAAS,WACPF,KAAKc,UAAY,ghBAYjBd,KAAKM,cAAc,kBAAkBS,iBAAiB,SAAQ,eApClE,EAoCkE,GApClE,EAoCkE,UAAE,WAAOC,GAAK,yEAEjB,OADzDA,EAAMC,iBACAC,EAAe,EAAKZ,cAAc,kBAAiB,kBAGjDa,MAAMC,EAAAA,EAAAA,UAAuB,EAAKb,OAAM,QACxCc,EAAcC,SAASC,cAAc,MAC/BC,UAAUC,IAAI,gBAC1BJ,EAAYK,UAAY,kCAExBR,EAAaJ,UAAY,GACzBI,EAAaS,YAAYN,GAAa,wBAGgD,OAHhD,0BAEtCH,EAAaJ,UAAY,GAC6D,UAChFc,EAAAA,EAAAA,iBADY,qEACgCV,GAAa,cAEzD,IAAIW,MAAM,sBAAqB,yDArD7C,+KAuDK,mDAnB6D,GAoBhE,IAxDF,iFAwDG,EArDe,CAqDf,EArDwBC,cAwD3BC,eAAeC,OAAO,gBAAiBjC","sources":["webpack://restaurant-apps/./src/scripts/components/submitreview.js"],"sourcesContent":["import endPointApi from '../globals/endpoint-api';\r\nimport UrlParser from '../routes/url-parser';\r\nimport creatorTemplate from '../view/templates/element-creator';\r\n\r\nclass SubmitReview extends HTMLElement {\r\n  connectedCallback() {\r\n    this.render();\r\n  }\r\n\r\n  get value() {\r\n    const url = UrlParser.parseActiveUrlWithoutCombiner();\r\n    const data = {\r\n      id: url.id,\r\n      name: this.querySelector('.feedback-name').value,\r\n      review: this.querySelector('.feedback-content').value,\r\n    };\r\n\r\n    return {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    this.innerHTML = `\r\n    <div class=\"detail-resto__post-feedback\">\r\n      <h3 tabindex=\"0\">Post your feedback here!</h3>\r\n      <form class=\"post-feedback\">\r\n        <input type=\"text\" placeholder=\"Your name\" class=\"feedback-name\" maxlength=\"50\" required>\r\n        <textarea name=\"feedback-content\" id=\"feedback-content\" class=\"feedback-content\" cols=\"30\" rows=\"7\" placeholder=\"Your feedback\" maxlength=\"250\" required></textarea>\r\n        <button class=\"submit-review\" type=\"s\r\n        \">Submit</button>\r\n      </form>        \r\n    </div>\r\n    `;\r\n\r\n    this.querySelector('.post-feedback').addEventListener('submit', async (event) => {\r\n      event.preventDefault();\r\n      const postFeedback = this.querySelector('.post-feedback');\r\n\r\n      try {\r\n        await fetch(endPointApi.addReview, this.value);\r\n        const successText = document.createElement('p');\r\n        successText.classList.add('success-text');\r\n        successText.innerText = 'Your review has been submitted!';\r\n\r\n        postFeedback.innerHTML = '';\r\n        postFeedback.appendChild(successText);\r\n      } catch (error) {\r\n        postFeedback.innerHTML = '';\r\n        const errorText = 'Feedback failed. Please check your connection and refresh the page';\r\n        await creatorTemplate.errorTextElement(errorText, postFeedback);\r\n\r\n        throw new Error('Cannot post review');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ncustomElements.define('submit-review', SubmitReview);\r\n"],"names":["i","SubmitReview","this","render","data","id","UrlParser","name","querySelector","value","review","method","headers","body","JSON","stringify","innerHTML","addEventListener","event","preventDefault","postFeedback","fetch","endPointApi","successText","document","createElement","classList","add","innerText","appendChild","creatorTemplate","Error","HTMLElement","customElements","define"],"sourceRoot":""}