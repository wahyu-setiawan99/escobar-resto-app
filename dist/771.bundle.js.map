{"version":3,"file":"771.bundle.js","mappings":";62EAAMA,EAAS,sgBAyCZ,SAzCY,uBACb,SAAUC,GACRC,KAAKC,OAASF,EACdC,KAAKE,QACP,GAAC,oBAED,WAAS,WACPF,KAAKG,UAAY,yJAAH,OAIuCH,KAAKC,OAAOG,KAAI,mJACDJ,KAAKC,OAAOI,UAAS,iJAKhFL,KAAKC,OAAOK,KAAI,wIAKNN,KAAKC,OAAOM,OAAOC,QAAQ,GAAE,8GAIjBR,KAAKC,OAAOQ,GAAE,aAAKT,KAAKC,OAAOG,KAAI,4FAKvDJ,KAAKC,OAAOS,YAAW,8DAOlCV,KAAKW,cAAc,sBAAsBC,iBAAiB,QAAQ,WAChE,EAAKD,cAAc,iCAAiCE,MAAMC,QAAU,MACtE,GACF,oFAAC,EAzCY,CAyCZ,EAzCqBC,cA4CxBC,eAAeC,OAAO,aAAcnB,4xEC5C9BoB,EAAU,sgBAab,SAba,wBACd,SAAWC,GACTnB,KAAKoB,QAAUD,EACfnB,KAAKE,QACP,GAAC,oBAED,WACEF,KAAKG,UAAY,+FAAH,OAE4BH,KAAKoB,QAAQhB,KAAI,aAAKJ,KAAKoB,QAAQC,KAAI,kEACnCrB,KAAKoB,QAAQD,OAAM,4BAGnE,oFAAC,EAba,CAab,EAbsBJ,cAgBzBC,eAAeC,OAAO,cAAeC,4xEChB/BI,EAAY,sgBAqBf,SArBe,qCAChB,WACEtB,KAAKE,QACP,GAAC,oBAED,WACEF,KAAKG,UAAY,qnBAenB,oFAAC,EArBe,CAqBf,EArBwBY,cAwB3BC,eAAeC,OAAO,gBAAiBK,+RCvBvC,uwRAD4D,IAEtDC,EAAY,aADlB,qRACkB,UADlB,UAyCG,EAdA,EATA,EALA,EAZe,GADlB,EACkB,EADlB,mJACkB,sDAsDf,OAvDH,EACkB,EADlB,EACkB,kBAChB,SAAUxB,GACRC,KAAKC,OAASF,EACdC,KAAKwB,SAAW,CACdf,GAAIV,EAAMU,GACVL,KAAML,EAAMK,KACZE,KAAMP,EAAMO,KACZI,YAAaX,EAAMW,YACnBL,UAAWN,EAAMM,UACjBE,OAAQR,EAAMQ,QAEhBP,KAAKyB,YACP,GAAC,wCAED,oGACyBC,EAAAA,EAAAA,SAA4B1B,KAAKC,OAAOQ,IAAG,OAApD,OAARkB,EAAW,EAAH,yBACLA,GAAQ,gDAClB,oFAED,8FACwB3B,KAAK4B,cAAa,OAA3B,IAAG,EAAH,KACA,CAAF,+BACH5B,KAAK6B,cAAa,+CAElB7B,KAAK8B,gBAAe,iDAE7B,uFAED,yFACE9B,KAAKG,UAAY,iLAOjBH,KAAKW,cAAc,gBAAgBC,iBAAiB,QAAO,YAAE,8FACrDc,EAAAA,EAAAA,SAA4B,EAAKF,UAAS,uBAC1C,EAAKC,aAAY,4CACtB,gDACJ,qFAED,yFACEzB,KAAKG,UAAY,oLAOjBH,KAAKW,cAAc,iBAAiBC,iBAAiB,QAAO,YAAE,8FACtDc,EAAAA,EAAAA,YAA+B,EAAKzB,OAAOQ,IAAG,uBAC9C,EAAKgB,aAAY,4CACtB,gDACJ,8CAvDH,iFAuDG,EAtDe,CAsDf,EAtDwBV,cAyD3BC,eAAeC,OAAO,eAAgBM","sources":["webpack://restaurant-apps/./src/scripts/components/itemresto.js","webpack://restaurant-apps/./src/scripts/components/itemreview.js","webpack://restaurant-apps/./src/scripts/components/itemskeleton.js","webpack://restaurant-apps/./src/scripts/components/likerfeature.js"],"sourcesContent":["class ItemResto extends HTMLElement {\r\n  set resto(resto) {\r\n    this._resto = resto;\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.innerHTML = `\r\n    <div tabindex=\"0\" class=\"itemresto_container\">\r\n      \r\n      <div class=\"image_resto\">\r\n        <img  src=\"./images/etc/skeleton_img.jpg\" alt=\"${this._resto.name}\" width=\"100%\" height=\"500px\" class=\"item-resto__image lazyload\"\r\n          data-src=\"https://restaurant-api.dicoding.dev/images/medium/${this._resto.pictureId}\">\r\n        <p class=\"loading-text__indicator-item\">Loading image ...</p>\r\n      </div>\r\n\r\n      <div class=\"city_resto\">\r\n        <p>${this._resto.city}</p>\r\n      </div>\r\n\r\n      <div class=\"detail-description_resto\">\r\n        <div class=\"rating_resto\">\r\n          <p>Rating: ${this._resto.rating.toFixed(1)} &#x2605</p>\r\n        </div>\r\n\r\n        <div class=\"name_resto\">\r\n          <h3><a href=\"/#/detail/${this._resto.id}\">${this._resto.name}</a></h3>\r\n\r\n        </div>\r\n\r\n        <div class=\"preview_resto\">\r\n          <p>${this._resto.description}</p>\r\n\r\n        </div>\r\n      </div>\r\n    </div>    \r\n    `;\r\n\r\n    this.querySelector('.item-resto__image').addEventListener('load', () => {\r\n      this.querySelector('.loading-text__indicator-item').style.display = 'none';\r\n    });\r\n  }\r\n}\r\n\r\ncustomElements.define('item-resto', ItemResto);\r\n","class ItemReview extends HTMLElement {\r\n  set review(review) {\r\n    this._review = review;\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.innerHTML = `\r\n      <div tabindex=\"0\" class=\"item-review\">\r\n        <p tabindex=\"0\" class=\"name-review\">${this._review.name} (${this._review.date})</p>\r\n        <p tabindex=\"0\" class=\"content-review\">\"${this._review.review}\"</p>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('item-review', ItemReview);\r\n","class ItemSkeleton extends HTMLElement {\r\n  connectedCallback() {\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.innerHTML = `\r\n    <div class=\"itemresto_container\">\r\n      \r\n      <div class=\"image_resto\">\r\n        <img src=\"./images/etc/skeleton_img.jpg\" alt=\"skeleton\" class=\"item-resto__image skeleton\" width=\"100%\" height=\"500px\" >\r\n      </div>\r\n\r\n      <div class=\"detail-description_resto\">\r\n        <div class=\"preview_resto skeleton\">\r\n          <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Adipisci, animi provident. Repudiandae, ducimus. Voluptatibus fuga aperiam natus quasi placeat, iure odit cupiditate ipsum adipisci cum facere nisi suscipit accusantium incidunt?</p>\r\n\r\n        </div>\r\n      </div>\r\n    </div>    \r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('item-skeleton', ItemSkeleton);\r\n","import FavoriteRestaurant from '../data/favorite-resto-idb';\r\n\r\nclass LikerFeature extends HTMLElement {\r\n  set resto(resto) {\r\n    this._resto = resto;\r\n    this._restoDb = {\r\n      id: resto.id,\r\n      name: resto.name,\r\n      city: resto.city,\r\n      description: resto.description,\r\n      pictureId: resto.pictureId,\r\n      rating: resto.rating,\r\n    };\r\n    this.renderPage();\r\n  }\r\n\r\n  async isRestoinDb() {\r\n    const favResto = await FavoriteRestaurant.getResto(this._resto.id);\r\n    return !!favResto;\r\n  }\r\n\r\n  async renderPage() {\r\n    const checkDb = await this.isRestoinDb();\r\n    if (checkDb) {\r\n      await this.renderLiked();\r\n    } else {\r\n      await this.renderUnliked();\r\n    }\r\n  }\r\n\r\n  async renderUnliked() {\r\n    this.innerHTML = `\r\n    <div tabindex=\"0\" aria-label=\"like this resto\" class=\"liker__container\">\r\n      <i class=\"fa-regular fa-thumbs-up like-button\"></i>\r\n      <p>like</p>\r\n    </div>\r\n    `;\r\n\r\n    this.querySelector('.like-button').addEventListener('click', async () => {\r\n      await FavoriteRestaurant.putResto(this._restoDb);\r\n      await this.renderPage();\r\n    });\r\n  }\r\n\r\n  async renderLiked() {\r\n    this.innerHTML = `\r\n    <div tabindex=\"0\" class=\"liker__container\" aria-label=\"unlike this resto\">\r\n      <i class=\"fa-solid fa-thumbs-up liked-button\"></i>\r\n      <p>unlike</p>\r\n    </div>\r\n    `;\r\n\r\n    this.querySelector('.liked-button').addEventListener('click', async () => {\r\n      await FavoriteRestaurant.deleteResto(this._resto.id);\r\n      await this.renderPage();\r\n    });\r\n  }\r\n}\r\n\r\ncustomElements.define('liker-button', LikerFeature);\r\n"],"names":["ItemResto","resto","this","_resto","render","innerHTML","name","pictureId","city","rating","toFixed","id","description","querySelector","addEventListener","style","display","HTMLElement","customElements","define","ItemReview","review","_review","date","ItemSkeleton","LikerFeature","_restoDb","renderPage","FavoriteRestaurant","favResto","isRestoinDb","renderLiked","renderUnliked"],"sourceRoot":""}