{"version":3,"file":"43.bundle.js","mappings":";gYACA,ysOAqBA,QApBoB,yBADpB,4FACoB,SADpB,UAYG,EANA,EALiB,EAiBjB,OAlBH,EACoB,EADpB,EACoB,KADpB,EACoB,uCAClB,sGACyBA,MAAMC,EAAAA,EAAAA,WAAsB,OAArC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,qFAED,WAAyBC,GAAE,yFACFN,MAAMC,EAAAA,EAAAA,YAAwBK,IAAI,OAA3C,OAARJ,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaG,YAAU,2CAC/B,sFAED,WAAyBC,GAAO,yFACPR,MAAMC,EAAAA,EAAAA,YAAwBO,IAAS,OAAhD,OAARN,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,GAAY,2CACpB,+CAlBH,iFAkBG,EAjBiB,4SCDpB,8lGAAAK,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAGA,IAAQC,EAAmDC,EAAAA,EAAAA,aAArCC,EAAqCD,EAAAA,EAAAA,gBAApBE,EAAoBF,EAAAA,EAAAA,gBAErDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAcE,EAAiB,CACtDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAiB,CAAEM,QAAS,MACzD,IA0BF,QAvB2B,CACnBC,SAAQ,SAACd,GAAI,oGACZA,EAAI,CAAF,gEAIOQ,EAAS,uCAAEO,IAAIR,EAAiBP,IAAE,0CAL/B,EAMnB,EACMgB,YAAW,WAAG,iHACJR,EAAS,uCAAES,OAAOV,IAAe,0CAD7B,EAEpB,EACMW,SAAQ,SAACC,GAAO,oGACfA,EAAMnB,GAAI,CAAF,gEAICQ,EAAS,uCAAEY,IAAIb,EAAiBY,IAAK,0CAL/B,EAMtB,EACME,YAAW,SAACrB,GAAI,iHACNQ,EAAS,8CAASD,EAAiBP,IAAE,0CAD/B,EAEtB,mCCxBF,QARe,CACbsB,QAAS,sCACTlB,aAAc,uBACdE,gBAAiB,EACjBC,gBAAiB,4DCKnB,QAPoB,CAClBgB,UAAW,GAAF,OAAKlB,EAAAA,EAAAA,QAAc,SAC5BmB,YAAa,SAACxB,GAAE,gBAAQK,EAAAA,EAAAA,QAAc,mBAAWL,EAAE,EACnDyB,YAAa,SAACvB,GAAO,gBAAQG,EAAAA,EAAAA,QAAc,qBAAaH,EAAO,EAC/DwB,UAAW,GAAF,OAAKrB,EAAAA,EAAAA,QAAc,2GCO9BsB,SAASC,iBAAiB,mBAAoBC,EAAAA","sources":["webpack://restaurant-apps/./src/scripts/data/RestaurantData.js","webpack://restaurant-apps/./src/scripts/data/favorite-resto-idb.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/globals/endpoint-api.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import endPointApi from '../globals/endpoint-api';\r\n\r\nclass RestaurantData {\r\n  static async ListResto() {\r\n    const response = await fetch(endPointApi.listResto);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async DetailResto(id) {\r\n    const response = await fetch(endPointApi.detailResto(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n\r\n  static async SearchResto(keyword) {\r\n    const response = await fetch(endPointApi.searchResto(keyword));\r\n    const responseJson = await response.json();\r\n    return responseJson;\r\n  }\r\n}\r\n\r\nexport default RestaurantData;\r\n","/* eslint-disable consistent-return */\r\nimport { openDB } from 'idb';\r\nimport config from '../globals/config';\r\n\r\nconst { DatabaseName, DatabaseVersion, ObjectStoreName } = config;\r\n\r\nconst dbPromise = openDB(DatabaseName, DatabaseVersion, {\r\n  upgrade(database) {\r\n    database.createObjectStore(ObjectStoreName, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurant = {\r\n  async getResto(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).get(ObjectStoreName, id);\r\n  },\r\n  async getAllResto() {\r\n    return (await dbPromise).getAll(ObjectStoreName);\r\n  },\r\n  async putResto(resto) {\r\n    if (!resto.id) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).put(ObjectStoreName, resto);\r\n  },\r\n  async deleteResto(id) {\r\n    return (await dbPromise).delete(ObjectStoreName, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurant;\r\n","const config = {\r\n  BaseUrl: 'https://restaurant-api.dicoding.dev',\r\n  DatabaseName: 'escobar-app-database',\r\n  DatabaseVersion: 1,\r\n  ObjectStoreName: 'restaurants',\r\n\r\n};\r\n\r\nexport default config;\r\n","import config from './config';\r\n\r\nconst endPointApi = {\r\n  listResto: `${config.BaseUrl}/list`,\r\n  detailResto: (id) => `${config.BaseUrl}/detail/${id}`,\r\n  searchResto: (keyword) => `${config.BaseUrl}/search?q=${keyword}`,\r\n  addReview: `${config.BaseUrl}/review`,\r\n};\r\n\r\nexport default endPointApi;\r\n","import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.css';\nimport main from './view/main';\n\nimport './components/appbar';\nimport './components/heroapp';\nimport './components/likerfeature';\nimport './components/itemreview';\nimport './components/submitreview';\nimport './components/footerbar';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\ndocument.addEventListener('DOMContentLoaded', main);\n"],"names":["fetch","endPointApi","response","json","responseJson","restaurants","id","restaurant","keyword","i","DatabaseName","config","DatabaseVersion","ObjectStoreName","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","get","getAllResto","getAll","putResto","resto","put","deleteResto","BaseUrl","listResto","detailResto","searchResto","addReview","document","addEventListener","main"],"sourceRoot":""}